name: Commit

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test_cli:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [linux-gcc-13]
        include:
          - name: linux-gcc-13
            os: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2

    - name: Install bats
      if: runner.os == 'Linux'
      shell: bash
      run: |
          # Install bats
          git clone https://github.com/sstephenson/bats.git
          cd bats
          sudo ./install.sh /usr/local

    - name: Create Build Environment
      shell: bash
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Debug \
            -DPISA_ENABLE_BENCHMARKING=OFF \
            -DPISA_ENABLE_TESTING=OFF \
            -DPISA_CI_BUILD=ON \
            -DPISA_BUILD_TOOLS=ON ..

    - name: Build
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config Debug -- -j 4

    - name: Install
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: sudo make install

    - name: Test CLI
      shell: bash
      working-directory: ${{runner.workspace}}/build
      env:
          TEST_DIR: ../pisa/test
      run: ../pisa/test/cli/run.sh

  coverage:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2

    - name: Bulid docker image
      shell: bash
      run: docker build -t pisa -f- . < "${{runner.workspace}}/pisa/test/docker/coverage/Dockerfile"

    - name: Generate and upload coverage
      shell: bash
      run: docker run --env CODECOV_TOKEN="${{ secrets.CODECOV_TOKEN }}" --rm pisa

  format:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Install clang-format
      shell: bash
      run: |
          sudo pip install clang-format

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.13

    - name: Run clang-format
      shell: bash
      run: |
        wget https://raw.githubusercontent.com/Sarcasm/run-clang-format/master/run-clang-format.py
        python run-clang-format.py \
            --clang-format-executable clang-format \
            -r src/**/*.cpp include/pisa/**/*.hpp tools/*.cpp tools/*.hpp test/*.cpp

  headers:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Bulid docker image
      shell: bash
      run: docker build -t pisa -f- . < "${{runner.workspace}}/pisa/test/docker/headers/Dockerfile"
