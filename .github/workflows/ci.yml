name: Test MacOS

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [macos-gcc-9, macos-xcode-13.2]
        include:
          - name: macos-gcc-9
            os: macos-latest
            compiler: "gcc"
            version: "9"
          - name: macos-xcode-13.2
            os: macos-latest
            compiler: "xcode"
            version: "13.2"
    steps:
    - uses: actions/checkout@v2

    - name: Install (macOS)
      if: runner.os == 'macOS'
      run: |
          brew install autoconf automake libtool cmake
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
            echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
          else
            sudo xcode-select -switch /Applications/Xcode_${{ matrix.version }}.app
            echo "CC=$(xcrun -f clang)" >> $GITHUB_ENV
            echo "CXX=$(xcrun -f clang++)" >> $GITHUB_ENV
            echo "SDKROOT=$(xcodebuild -version -sdk macosx Path)" >> $GITHUB_ENV
            echo "PATH=$(dirname $(xcrun -f clang)):$PATH" >> $GITHUB_ENV
          fi

    - name: Create Build Environment
      shell: bash
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake "$GITHUB_WORKSPACE" -DCMAKE_BUILD_TYPE=Debug -DPISA_BUILD_TOOLS=ON -DPISA_CI_BUILD=ON ..

    - name: Build
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config Debug -- -j 4

    - name: Test
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: ctest -VV -j 4
